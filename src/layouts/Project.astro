---
import { siteConfig } from "../consts";
import SidebarLayout from "./Sidebar.astro";
import SocialMediaLinks from "@/components/SocialMediaLinks";
import TOC from "@/components/TableOfContents";
import { getLangFromUrl, useUITranslations } from "@/utils";
import { Icon } from "astro-icon";
import type { CollectionEntry } from "astro:content";

interface Props {
	project: CollectionEntry<"project">;
}

const { project } = Astro.props;
const lang = getLangFromUrl(Astro.url);
const translate = useUITranslations(lang);
const {
	data: {
		title,
		pubDate,
		description,
		heroImage,
		platform,
		stack,
		website,
		github,
	},
} = project;
const { headings } = project.render && (await project.render());
const articleDate = pubDate.toISOString();
---
<<<<<<< HEAD
<SidebarLayout title={title} description={description} articleDate={articleDate}>
	<section class="cody-bg space-y-2 sm:space-y-4" data-pagefind-body>
		<h2 class="title">{title}</h2>

		{
			heroImage && (
				<div class="aspect-h-9 aspect-w-16 mb-6 w-full">
					<img src={heroImage.url} alt={heroImage.alt} />
				</div>
			)
		}

		<ul class="space-y-2">
			{
				platform && (
					<li class="project-frontmatter-item">
						<small>{translate("project.platform").text}</small>
						<span>{platform}</span>
					</li>
				)
			}
			{
				stack && (
					<li class="project-frontmatter-item">
						<small>{translate("project.stack").text}</small>
						<ul class="inline-flex gap-2 sm:gap-4">
							{stack.map((s: string) => (
								<li>
									<Icon
										class="h-6 w-6 text-textColor"
										name={`vscode-icons:file-type-${s.toLowerCase()}`}
										focusable="false"
										title={s}
									/>
								</li>
							))}
						</ul>
					</li>
				)
			}
			{
				website && (
					<li class="project-frontmatter-item">
						<small>{translate("project.website").text}</small>
						<a href={website} target="_blank" class="cody-link">
							{website}
						</a>
					</li>
				)
			}
			{
				github && (
					<li class="project-frontmatter-item">
						<small>GITHUB</small>
						<a href={github} target="_blank" class="cody-link">
							{github}
						</a>
					</li>
				)
			}
		</ul>

		<hr />

		<div
			class="prose dark:prose-invert prose-sm prose-headings:font-semibold prose-headings:ml-4 prose-headings:before:absolute prose-headings:before:-ms-4 prose-headings:before:text-accent prose-headings:before:content-['#'] prose-th:before:content-none"
		>
			<slot />
		</div>
	</section>
	<aside slot="sidebar">
		<div class="flex flex-col space-y-2">
			<h2 class="font-semibold text-lg text-textColor">
				{siteConfig.profile.author}
			</h2>
			{
				siteConfig.profile.description && (
					<p>{translate("profile.description").text}</p>
				)
			}
			<SocialMediaLinks />
			<span class="!my-4 text-accent" aria-hidden>---</span>
			<p>
				{description}
			</p>
		</div>
		{!!headings.length && <TOC headings={headings} />}
	</aside>
</SidebarLayout>

<style>
	small {
		@apply text-bgColor px-1 bg-accent mr-2 font-semibold min-w-[95px];
	}

	.project-frontmatter-item {
		@apply flex flex-col gap-x-0 sm:flex-row;
	}
</style>
