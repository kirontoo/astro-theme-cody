---
import type { Page, GetStaticPaths } from "astro";
import type { CollectionEntry } from "astro:content";
import BaseLayout from "@/layouts/Sidebar";
import PostPreview from "@/components/blog/PostPreviewA";
import Pagination from "@/components/Pagination";
import {
	getAllPosts,
	getUniqueTags,
	sortMDByDate,
	sortMDByPinned,
	filterByLanguage,
	getSupportedLanguages,
	type SupportedLanguage,
} from "@/utils";
import { siteConfig } from "src/consts";

export const getStaticPaths = (async ({ paginate }) => {
	// grab all posts besides drafts and hidden ones
	const allPosts = await getAllPosts(true);
	const allPostsByDate = sortMDByDate(allPosts);
	const allPostsByPinned = sortMDByPinned(allPostsByDate);
	const tags = getUniqueTags(allPosts);

	// filter posts by language and paginate
	return getSupportedLanguages().flatMap((lang) => {
		const filteredByLang = filterByLanguage(
			allPostsByPinned,
			lang as SupportedLanguage,
		);

		return paginate(filteredByLang, {
			params: { lang },
			props: { tags },
			pageSize: siteConfig.settings.paginationSize,
		});
	});
}) satisfies GetStaticPaths;

interface Props {
	page: Page<CollectionEntry<"blog">>;
	tags: string[];
}

const { page, tags } = Astro.props;

const meta = {
	title: "Posts",
	description: "Read my collection of posts and the things that interest me",
};

const paginationProps = {
	...(page.url.prev && {
		prevUrl: {
			url: page.url.prev,
			text: `← Previous Posts`,
		},
	}),
	...(page.url.next && {
		nextUrl: {
			url: page.url.next,
			text: `Next Posts →`,
		},
	}),
};
---

<BaseLayout {...meta}>
	<section class="cody-bg">
		<h1 class="title">Posts</h1>
		<ul class="flex flex-col gap-4">
			{page.data.map((post) => <PostPreview post={post} withDesc />)}
		</ul>
		<Pagination {...paginationProps} />
	</section>
	{
		!!tags.length && (
			<aside slot="sidebar">
				<h2 class="flex font-semibold text-lg items-center mb-4">
					<svg
						aria-hidden="true"
						xmlns="http://www.w3.org/2000/svg"
						class="h-6 w-6"
						viewBox="0 0 24 24"
						stroke-width="1.5"
						stroke="currentColor"
						fill="none"
						stroke-linecap="round"
						stroke-linejoin="round"
					>
						<path stroke="none" d="M0 0h24v24H0z" fill="none" />
						<path d="M7.859 6h-2.834a2.025 2.025 0 0 0 -2.025 2.025v2.834c0 .537 .213 1.052 .593 1.432l6.116 6.116a2.025 2.025 0 0 0 2.864 0l2.834 -2.834a2.025 2.025 0 0 0 0 -2.864l-6.117 -6.116a2.025 2.025 0 0 0 -1.431 -.593z" />
						<path d="M17.573 18.407l2.834 -2.834a2.025 2.025 0 0 0 0 -2.864l-7.117 -7.116" />
						<path d="M6 9h-.01" />
					</svg>
					Tags
				</h2>
				<ul class="flex gap-2 flex-wrap mb-4">
					{tags.map((tag) => (
						<li class="tag">
							<a href={`/tags/${tag}`} aria-label={`tag: ${tag}`}>
								{tag}
							</a>
						</li>
					))}
				</ul>
				<a
					href="/tags"
					class="cody-link"
					aria-label="View all blog tags"
				>
					See more ->
				</a>
			</aside>
		)
	}
</BaseLayout>
