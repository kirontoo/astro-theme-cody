---
import type { CollectionEntry } from "astro:content";
import type { HTMLTag, Polymorphic } from "astro/types";
import FormattedDate from "@/components/FormattedDate";
import { Icon } from "astro-icon";
import { getLangFromUrl, getSlugFromCollectionEntry } from "@/utils";

type Props<Tag extends HTMLTag> = Polymorphic<{ as: Tag }> & {
	post: CollectionEntry<"blog" | "project">;
	withDesc?: boolean;
};

const { post, withDesc = false } = Astro.props;
const postDate = post.data.updatedDate ?? post.data.pubDate;
const lang = getLangFromUrl(Astro.url);
const slug = getSlugFromCollectionEntry(post);
const pinned: boolean = !!post.data.order;
const urlBasePath =
	post.collection === "project" ? "projects" : post.collection;
---

<li>
	<span>
		<a href={`/${lang}/${urlBasePath}/${slug}`} class="post-item">
			<h4 class="cody-link inline font-bold">{post.data.title}</h4>
		</a>
		{
			pinned && (
				<Icon
					class="h-5 w-5 inline text-accent rotate-45 -ml-1"
					name="mdi:pin"
					aria-hidden="true"
					focusable="false"
				/>
			)
		}
	</span>
	<p class="date pr-2 mt-1">
		<FormattedDate date={postDate} />
	</p>
	{withDesc && <p class="italic">{post.data.description}</p>}
</li>
<style>
	.post-item:before {
		content: "#";
		@apply text-accent-2;
	}
</style>
