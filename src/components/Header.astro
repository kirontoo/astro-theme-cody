---
import Search from './Search.astro';
import HeaderLink from "./HeaderLink.astro";
import { siteConfig, NAV_LINKS } from "../consts";
import ThemeToggle from "@/components/ThemeToggle";
import SelectLanguage from "@/components/SelectLanguage";
import { getLangFromUrl } from "@/utils";
import { useNavTranslations } from "src/utils/i18n";
import type { NavEntry } from "@/i18n/nav";

const url = new URL(Astro.request.url);
const lang = getLangFromUrl(Astro.url);
const t = useNavTranslations(lang);

function buildNavLink(nav: string, entry: NavEntry): string {
	if (entry.route) {
		return `/${lang}${entry.route}`;
	}

	return `/${lang}${nav != "home" ? `/${entry.slug}/` : "/"}`;
}
---

<header
	class="group relative mb-8 flex justify-between items-center gap-4"
	id="main-header"
>
	<div class="block">
		<a
			class="title whitespace-nowrap"
			href={`/${lang}/`}
			aria-current={url.pathname === "/" ? "page" : false}
			>{siteConfig.title}</a
		>
	</div>

	<nav
		class="mt-4 bg-surface/95 sm:bg-bgColor absolute hidden top-8 w-full sm:block sm:static sm:mt-0 group-[.menu-open]:z-50 group-[.menu-open]:flex group-[.menu-open]:bg-bgColor"
		id="navigation-menu"
		aria-label="main menu"
	>
		<div
			class="space-y-1 px-2 pb-3 pt-2 sm:flex sm:px-0 sm:py-0 sm:space-y-0 sm:space-x-2"
		>
			{
				NAV_LINKS.map((nav) => {
					const translation = t(nav);
					return (
						<HeaderLink
							class="block py-2 sm:py-0"
							href={buildNavLink(nav, translation)}
							title={translation.text}
							aria-current={
								url.pathname === translation.slug
									? "page"
									: false
							}
							data-astro-prefetch
						>
							{translation.text}
						</HeaderLink>
					);
				})
			}
			<HeaderLink
				class="sm:hidden block py-2 sm:py-0"
				href="/tags"
				title="tags"
				aria-current={url.pathname === "tags" ? "page" : false}
				data-astro-prefetch>{t("tags").text}</HeaderLink
			>
			<HeaderLink
				class="sm:hidden block py-2 sm:py-0"
				href="/series"
				title="series"
				aria-current={url.pathname === "series" ? "page" : false}
				data-astro-prefetch>{t("series").text}</HeaderLink
			>
		</div>
	</nav>

	<div class="flex gap-2 items-center justify-center">
		<Search/>
		<SelectLanguage class="sm:mr-2" />
		<ThemeToggle />

		<nav-button>
			<div class="sm:hidden">
				<span class="sr-only">open main menu</span>
				<button
					class="group flex items-center justify-center"
					type="button"
					id="navigation-menu-btn"
					aria-label="Open main menu"
					aria-expanded="false"
					aria-haspopup="menu"
				>
					<!-- icon when menu is closed -->
					<svg
						class="transform transition-all duration-150 ease-out group-aria-expanded:scale-0 group-aria-expanded:opacity-0 h-6 w-6 block group-aria-expanded:hidden"
						fill="none"
						viewBox="0 0 24 24"
						stroke-width="1.5"
						stroke="currentColor"
						aria-hidden="true"
					>
						<path
							stroke-linecap="round"
							stroke-linejoin="round"
							d="M3.75 6.75h16.5M3.75 12h16.5m-16.5 5.25h16.5"
						></path>
					</svg>

					<!-- icon when menu is open -->
					<svg
						class="transform transition-all duration-150 ease-out h-6 w-6 scale-0 text-accent opacity-0 transition-all group-aria-expanded:scale-100 group-aria-expanded:opacity-100 hidden group-aria-expanded:block"
						fill="none"
						viewBox="0 0 24 24"
						stroke-width="1.5"
						stroke="currentColor"
						aria-hidden="true"
					>
						<path
							stroke-linecap="round"
							stroke-linejoin="round"
							d="M6 18L18 6M6 6l12 12"></path>
					</svg>
				</button>
			</div>
		</nav-button>
	</div>
</header>

<style>
	.title {
		@apply bg-accent p-1 text-bgColor text-sm;
	}

	.title:before {
		content: "[";
		margin-right: 0;
		@apply text-bgColor;
	}

	.title:after {
		content: "]";
		@apply text-bgColor;
	}
</style>

<script>
	// src: https://github.com/chrismwilliams/astro-theme-cactus/blob/a85e0e559d3f92b32e73990486c0574b2b733227/src/components/layout/Header.astro

	class MobileNavBtn extends HTMLElement {
		private headerEl: HTMLElement;
		private mobileButtonEl: HTMLButtonElement;
		private menuOpen: boolean;

		constructor() {
			super();
			this.headerEl = document.getElementById("main-header")!;
			this.mobileButtonEl = this.querySelector(
				"button",
			) as HTMLButtonElement;
			this.menuOpen = false;

			this.mobileButtonEl.addEventListener(
				"click",
				this.toggleMobileMenu,
			);
		}

		toggleMobileMenu = () => {
			this.headerEl.classList.toggle("menu-open");
			this.menuOpen = !this.menuOpen;
			this.mobileButtonEl.setAttribute(
				"aria-expanded",
				this.menuOpen.toString(),
			);
		};
	}

	customElements.define("nav-button", MobileNavBtn);
</script>
